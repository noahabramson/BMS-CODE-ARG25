Free Running Mode
==================

In some cases, you don't want to run the commands in a loop (or multiple), but just infinite until you tell the microcontroller to stop it
In this case, you can use Free Running Mode. In this mode, you can start the SDP-K1, gather all the results and stop the SDP-K1 when you are finished.


Limitations
--------------
Because you need to get all the data out of the SDP-K1, you are limited on the amount of commands if you have a strict timing. This means you can't get more
then 115200 bit/s out. This might seem like a lot, but if you have multiple devices, this can be problematic.

For example, you wan to read the cells, spins, averaged and filtered values of all channels every 10 ms.
You have 6 devices in your chain.

Bytes of one sequence = commands x bytes x devices

Bits of one sequence = Bytes of one sequence x 8

In other words, it take command x bytes x devices x 8 = 24 x 8 x 6 x 8 = 9216 bits per sequence.

Since the bandwidth is 115200 bits/s, you can only transfer a sequence every 9216 / 115200 = 0.08 = 80 ms.
In addition to that, there is also some overhead. In the end it boils down to roughly one sequence per 100 ms.

How to use the Free Running Mode
------------------------------------------
To use the free running mode, you have to remove

.. code-block:: python
   :name: Free Running Mode

   bms.run_generic_command_list(command_list, board_list)


Instead, you have to manually compile the command list. This can be done by

.. code-block:: python
   :name: Compile

    compiled = bms.translate_command_list_to_compiled_commands(command_list, board_list)


Afer this, you can run the compiled command list by using

.. code-block:: python
   :name: Run command list

    bms.run_compiled_list(compiled, clear_buffer=False)


If you want to get the data that is send by the SDP-K1, you also have to start free running mode by the following command

.. code-block:: python
   :name: Start free run

    bms.interface.start_freerun_mode()


To retrieve the data, you can use the following structure

.. code-block:: python
   :name: Run free run mode

    time_start = time.perf_counter()
    # Run for 5 seconds
    time_running = 5
    out_data = []
    while True:
        time_running = time.perf_counter() - time_start
        # Break if the time is passed
        if time_running > t_read:
            break

        # Try to read the data and process it
        raw_data, data_timestamp = bms.interface.free_run_raw_commands(return_timestamp=True)
        parsed_data = bms.parse_command_list(raw_data, compiled)
        data = bms.parsed_command_list_to_dict(parsed_data, board_list)

        # Format the data
        data['timestamp'] = data_timestamp
        data['log'] = False
        temp_results = []
        for i in range(len(board_list)):
            temp_results.append({})
        for command in data['All']:
            for i in range(len(board_list)):
                info = command.quick_view()
                if len(info['variable']) < len(board_list):
                    info['variable'] = info['variable']
                else:
                    info['variable'] = info['variable'][i]
                temp_results[i].update(info['static'])
                temp_results[i].update(info['variable'])
                temp_results[i].update({'Total_PEC_Status': command.device_total_pec_status[i]})
        data['All'] = temp_results
        out_data.append(data)


Because Free Running Mode can cause some problems with the USB interface, it is recommend to place a try except loop around the free_run_raw_commands.
If this is not done, the program can crash very easily.

To stop the free running mode use the following:

.. code-block:: python
   :name: Stop free run

    bms.interface.stop_freerun_mode(clear_buffer=True)

To prevent issues, the buffer has to be cleared at the end of a run. Otherwise commands might still be in there that can cause issues for further runs

For a full example with the complete code including the try except structure, please have a look in scratchpads/SDP-K1/SDP-K1_Free_Run_Mode_simple.py
The Free Running Mode is not only limited to the SDP-K1. It also works for the Teensy 4.1. If you are transferring a lot of data, the Teensy 4.1 is the better option.